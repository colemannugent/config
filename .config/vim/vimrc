set nocompatible

" Location of the swapfiles
let $SWAPDIR=$XDG_CACHE_HOME."vim/swap//"
set directory=$SWAPDIR

" The directory to use with :set backup=on
let $BACKUPDIR=$XDG_CACHE_HOME."vim/backup"
set backupdir=$BACKUPDIR

" Location to save vim state to
let &viminfofile=$XDG_CACHE_HOME."vim/viminfo"

" Various paths used in the runtimepath
let $VIMDIR   = $XDG_CONFIG_HOME."vim/"
let $VIMAFTER = $XDG_CONFIG_HOME."vim/after/"
let $FZFDIR   = "/usr/share/vim/vimfiles/"
let $PLUGDIR  = $XDG_CONFIG_HOME."vim/plugged"

" Directory to save persistent undo state to
let $UNDODIR=$XDG_CACHE_HOME."vim/undo"
set undodir=$UNDODIR

let dirlist = [$BACKUPDIR, $PLUGDIR, $SWAPDIR, $UNDODIR]

" Load order for runtime files
set runtimepath=$VIM,$VIMRUNTIME,$VIMDIR,$VIMAFTER,$FZFDIR

" Make sure all required directories exist
for path in dirlist
	if !isdirectory(path)
		call mkdir(path, "p", 0700)
	endif
endfor

" Plugin configuration
if empty(glob($XDG_CONFIG_HOME.'vim/autoload/plug.vim'))
	silent !curl -fLo "$XDG_CONFIG_HOME"vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
	autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
else
	call plug#begin($PLUGDIR)
	" Productivity
	Plug 'tpope/vim-surround'
	Plug 'tpope/vim-fugitive'
	Plug 'godlygeek/tabular'
	Plug 'vim-airline/vim-airline'
	Plug 'scrooloose/nerdtree'
	Plug '/usr/share/vim/vimfiles/fzf.vim'
	Plug 'junegunn/fzf.vim'

	" Themes
	Plug 'altercation/vim-colors-solarized'
	Plug 'vim-airline/vim-airline-themes'

	" Language support
	Plug 'plasticboy/vim-markdown'
	Plug 'ledger/vim-ledger'
	Plug 'othree/html5.vim'
	Plug 'hail2u/vim-css3-syntax'
	Plug 'cakebaker/scss-syntax.vim'
	call plug#end()
endif

" Plugin settings
let g:airline_powerline_fonts = 1
let g:airline_theme='dark'
let g:vim_markdown_new_list_item_indent = 0
let g:vim_markdown_folding_disabled = 1

" Enable persistent undo if supported
if has('persistent_undo')
	set undofile
endif

" Enable loading of plugins based on filetype
filetype plugin indent on

" Enable solarized color scheme
set background=dark
colorscheme solarized

" Disable Background Color Erase (BCE) so that color schemes
" render properly when inside 256-color tmux and GNU screen.
" see also http://snk.tuxfamily.org/log/vim-256color-bce.html
if &term =~ '256color'
	set t_ut=
endif

" Enable relative line numbering
set relativenumber

" Show a line at the 80 character mark
set colorcolumn=80

" Enables mouse support
set mouse=a

" Enables syntax highlighting
syntax on

" Enables line numbers
set number

" Highlight trailing spaces
match ErrorMsg '\s\+$'

" Show the column the cursor is in
set cursorcolumn

" Show the line the cursor is on
set cursorline

" Set the leader to <Space>
let mapleader = "\<Space>"

" Some easy ways to get out of insert mode
inoremap jk <Esc>
inoremap kj <Esc>

" Key Mappings
noremap <F7> :tabp<Enter>
noremap <F8> :tabn<Enter>

" Explicitly set the tab behavoiur
set tabstop=8
set softtabstop=0
set noexpandtab
set shiftwidth=8

" Save the file, even if I am still pressing shift
command W w

" Map ; to open fzf
map ; :Files<Enter>

" Map <Leader>w to write the current buffer
noremap <Leader>w :write<Enter>

" Map <Leader>q to save and quit
noremap <Leader>q :wq<Enter>

" Map <Leader>Q to quit immediately
noremap <Leader>Q :q!<Enter>

" Map <Leader>i to show the current buffers
noremap <Leader>i :buffers<Enter>

" Map <Leader>l to move forward a buffer
noremap <Leader>j :bnext<Enter>

" Map <Leader>h to move back a buffer
noremap <Leader>k :bprevious<Enter>

" Map <Leader>h to use xxd to render a hexdump of the file
noremap <Leader>h :%!xxd -c 32<Enter>

" Map <Leader>h to use xxd to revert a hexdump to ascii
noremap <Leader>H :%!xxd -c 32 -r<Enter>

" Map <Leader>d to insert the date as a markdown header
noremap <Leader>d i##<Esc>:r!date<CR>kJ

" Map <Leader>n to open NerdTree
noremap <Leader>n :NERDTreeToggle<CR>
