#!/bin/bash
# This is a modified version of the classic i3lock script that focuses on speed
# and usability on more than just one monitor. Try some of the different modes
# e.g. "lock pixelate" or "lock hybrid"

# A temporary file to hold the screenshot image
screen="/tmp/screen.png"

# The location of the icon file to overlay in the center
# TODO: make this not specific to my username
icon="/home/coleman/.config/i3/lock.png"

# Take the screenshot and save it in the directory specified by $screen
echo "Taking screenshot..."
scrot $screen

# Calculate the total width of the screenshot
total_width=$(identify $screen | cut -d " " -f 3 | awk -F'x' '{print $1}')
echo "Total width: $total_width"

# Calculate the height of the screenshot
height=$(identify $screen | cut -d " " -f 3 | awk -F'x' '{print $2}')
echo "Height: $height"

# Find out how many monitors we have
monitors=$(xrandr --query | grep "\<connected\>" | wc -l)
echo "# of monitors: $monitors"

# Get the width of the icon
icon_width=$(identify $icon | cut -d " " -f 3 | awk -F'x' '{print $1}')
echo "Icon Width: $icon_width"

# Get the height of the icon
icon_height=$(identify $icon | cut -d " " -f 3 | awk -F'x' '{print $2}')
echo "Icon Height: $icon_height"

if [[ $1 == "pixelate" ]]; then
	# Down-scale then up-scale the image to acheive the pixelated look
	echo "Pixelating image..."
	convert $screen -scale 5% -scale 2000% $screen

elif [[ $1 == "hybrid" ]]; then
	echo "Pixelating and blurring image..."
	convert $screen -scale 5% -scale 2000% -blur 0x5 $screen

elif [[ $1 == "rotate" ]]; then
	echo "Radially blurring image..."
	convert $screen -radial-blur 5 $screen

elif [[ $1 == "grayscale" ]]; then
	echo "Blurring and converting color space to grayscale..."
	convert $screen -blur 16x8 -colorspace Gray $screen
else
	echo "Blurring image..."
	convert $screen -blur 16x8 $screen
fi

# (x center of screenshot) - (x center of icon) = the x location for the icon overlay
let x="($total_width / 2) - ($icon_width / 2)"
echo "x: $x"

# (y center of the screenshot) - (y center of the icon) = the y location for the icon overlay
let y="($height / 2) - ($icon_height / 2)"
echo "y: $y"

echo "Compositing lock image..."
convert $screen $icon -filter Triangle -geometry +$x+$y -composite -matte $screen

# Lock the screen with our finished pixelated image
i3lock -u -i $screen

# Remove our temp file for our screenshot
rm $screen
